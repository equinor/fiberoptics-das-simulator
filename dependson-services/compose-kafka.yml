---
version: '3.7'
services:

  broker:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    hostname: broker
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_ALLOW_AUTO_CREATE_TOPICS: 'false'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400  
      KAFKA_NUM_IO_THREADS: 2
      KAFKA_NUM_NETWORK_THREADS: 2
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_HEAP_OPTS: '-Xmx256m -Xms256m'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'  
    networks:
      - local-network

      
  schemaregistry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    hostname: schemaregistry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
    networks:
      - local-network

  streaminitiator:
    image: fibra/streaminitiator:${STREAMINITIATOR_VERSION}
    hostname: streaminitiator
    ports:
      - "8080:8080"
    environment:
      ZOOKEEPERS: zookeeper:2181
      SERVER_PORT: 8080
      BROKERS_COLD: broker:29092
      BROKERS_INGRESS: broker:29092
      ANNOUNCED_BROKERS_INGRESS: broker:9092
      SCHEMAREGISTRY: http://schemaregistry:8081
      REPLICATION_FACTOR: 1
      SPRING_PROFILES_ACTIVE: docker
      INTERROGATOR_ENV: docker
      PG_SUPERADMIN_URL: jdbc:postgresql://db:5432/postgres?user=postgres&password=postgres
      PG_APP_DB_URL: jdbc:postgresql://db:5432/streamdb?user=streamuser&password=streampassword
      MIGRATION_FOLDER: ", filesystem:/sql"
      PARTITIONS: 5
      INTERNAL_SERVICES_API_KEY: 1aa111a11aa11a0a1a1aa1111a1a1a1a
      VENDORS_KEYS_SIMULATOR_OLD: 1aa111a11aa11a0a1a1aa1111a1a1a1a
      FIBRA_CLUSTER: demo
    depends_on:
      - db
      - schemaregistry
    volumes:
      - ./sql:/sql
    networks:
      - local-network

  db:
    image: postgres:13.10
    hostname: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    command: -p 5432
    networks:
      - local-network

  time_drift_check:
    image: fibra/pkg-validator:0.1.3
    hostname: pkg-validator
    depends_on:
      - streaminitiator
    environment:
      TOPIC: placeholder
      PARTITIONS: 5
      BROKER: broker_ingress:29092
      FETCH_MAX_PARTITION_BYTES: 1048576
      MAX_POLL_INTERVAL_MS: 600000
      LINGER_MS: 0
      LOCI: 3095
      NANODIFF: 819200000
      API_KEY: 1aa111a11aa11a0a1a1aa1111a1a1a1a
      STREAMINIT_URL: http://streaminitiator:8080

networks:
  local-network:
    name: local-network
