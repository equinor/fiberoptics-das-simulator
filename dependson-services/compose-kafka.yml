---
version: '3.7'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - local-network

  broker_ingress:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    hostname: broker_ingress
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181/ingress'
      KAKFA_BOOTSTRAP_SERVERS: broker_ingress:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_ALLOW_AUTO_CREATE_TOPICS: 'false'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_ingress:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAKFA_SOCKET_SEND.BUFFER.BYTES: 102400
      KAKFA_NUM_IO_THREADS: 2
      KAKFA_NUM_NETWORK_THREADS: 2
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_HEAP_OPTS: -Xmx256m -Xms256m
    networks:
      - local-network

  schemaregistry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    hostname: schemaregistry
    depends_on:
      - zookeeper
      - broker_ingress
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181/ingress'
    networks:
      - local-network

  streaminitiator:
    image: fibra/streaminitiator:${STREAMINITIATOR_VERSION}
    hostname: streaminitiator
    ports:
      - "8080:8080"
    environment:
      ZOOKEEPERS: zookeeper:2181
      SERVER_PORT: 8080
      BROKERS_COLD: broker_ingress:29092
      BROKERS_INGRESS: broker_ingress:29092
      SCHEMAREGISTRY: http://schemaregistry:8081
      SPRING_CLOUD_STREAM_KAFKA_BINDER_REPLICATIONFACTOR: 1
      SPRING_PROFILES_ACTIVE: docker
      INTERROGATOR_ENV: docker
      PG_SUPERADMIN_URL: jdbc:postgresql://db:5432/postgres?user=postgres&password=postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/streamdb?user=streamuser&password=streampassword
      SPRING_FLYWAY_LOCATIONS: classpath:/db/migration,classpath:/db/testdata
      PARTITIONS: 5
    depends_on:
      - db
      - schemaregistry
    networks:
      - local-network

  db:
    image: postgres:latest
    hostname: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    command: -p 5432
    networks:
      - local-network

networks:
  local-network:
    name: local-network
