name: Maven docker for maven

on:
  workflow_call:
    inputs:
      JAVA_VERSION:
        required: true
        type: string
    secrets:
      GITHUB_DEPLOY_KEY:
        required: true
      DOCKER_REGISTRY_TOKEN:
        required: true
      

jobs:
  make-docker:
    env:
      MAVEN_CMD: ./mvnw --no-transfer-progress
      GITHUB_USERNAME: lindvarl
      DOCKER_REGISTRY_USER: Fibra
      DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Docker login
        run: echo ${{ secrets.DOCKER_REGISTRY_TOKEN }}| docker login fibra.azurecr.io --username ${DOCKER_REGISTRY_USER} --password-stdin
     
      - name: Set up JDK ${{ inputs.JAVA_VERSION }}
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ inputs.JAVA_VERSION }}
          distribution: 'zulu'

      - uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "fibra-utils-helm-operator", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fibra-utils-status-logger", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fibra-utils-workingstatus-actuator", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fibra-utils-containers", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fibra-utils-postgres-bootstrapper", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fibra-utils-partitionutils", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fibra-schemas", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            },
            {
              "id": "fiberoptics-das-public-schemas", 
              "username": "${env.GITHUB_USERNAME}", 
              "password": "${{ secrets.GITHUB_DEPLOY_KEY }}" 
            }]

      - name: Build, test and package
        run: ${MAVEN_CMD} clean package spring-boot:repackage
      
      - name: Push docker container
        run: ${MAVEN_CMD} docker:push
